<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/tx     
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
		http://www.springframework.org/schema/aop     
		ttp://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee-3.1.xsd " default-autowire="byName">
     <!-- 引入配置文件 -->   
     <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">    
         <property name="locations">    
            <list>    
                 <value>classpath:application.properties</value>
                 <value>classpath:redis.properties</value>
            </list>    
        </property>    
  	 </bean>
  	 <!-- 基本包 -->
  	 <context:component-scan base-package="org.qhy.demo"></context:component-scan>
  	 <!-- 
  	 <jee:jndi-lookup id="dataSource" jndi-name="jdbc/jpetstore"/>
  	  -->
  	  <!-- 
     <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
         <property name="driverClass"><value>${jdbc.driverClassName}</value></property>
         <property name="jdbcUrl"><value>${jdbc.url}</value></property>               
         <property name="user"><value>${jdbc.username}</value></property>
         <property name="password"><value>${jdbc.password}</value></property>
         <property name="minPoolSize"><value>1</value></property>
         <property name="maxPoolSize"><value>20</value></property>
         <property name="maxIdleTime"><value>1800</value></property>
         <property name="acquireIncrement"><value>2</value></property>
         <property name="maxStatements"><value>0</value></property>
         <property name="initialPoolSize"><value>2</value></property>
         <property name="idleConnectionTestPeriod"><value>1800</value></property>
         <property name="acquireRetryAttempts"><value>30</value></property>
         <property name="breakAfterAcquireFailure"><value>true</value></property>
         <property name="testConnectionOnCheckout"><value>false</value></property>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="hibernateProperties">    
             <value>    
                 hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
                 hibernate.show_sql=true
                 current_sessuib_context_class=org.springframework.orm.hibernate4.SpringSessionContext 
             </value>    
        </property>
        <property name="packagesToScan">
	        <list>
		        <value>org.qhy.demo.hibernate.entity</value>
	        </list>
        </property>
	</bean>
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="txManager"/>
	-->
	
	<!-- redis -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
       <property name="maxTotal" value="2048" />  
       <property name="maxIdle" value="200" />  
       <property name="numTestsPerEvictionRun" value="1024"/>  
       <property name="timeBetweenEvictionRunsMillis" value="30000" />  
       <property name="minEvictableIdleTimeMillis" value="-1" />  
       <property name="softMinEvictableIdleTimeMillis" value="10000" />  
       <property name="maxWaitMillis" value="1500"/>  
       <property name="testOnBorrow" value="true" />  
       <property name="testWhileIdle" value="true"/>  
       <property name="testOnReturn" value="false"/>  
       <property name="jmxEnabled" value="true"/>  
       <property name="jmxNamePrefix" value="youyuan"/>  
       <property name="blockWhenExhausted" value="false"/>  
   </bean>
   <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="${host}" />
		<constructor-arg index="2" value="${port}" type="int" />
		<constructor-arg index="3" value="${timeout}" type="int" />
	</bean>
   <!-- 
   <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">  
	   <constructor-arg index="0" ref="jedisPoolConfig"/>  
	   <constructor-arg index="1">  
		   <list>  
			   <bean name="shard1" id="shard1" class="redis.clients.jedis.JedisShardInfo">  
				   <constructor-arg name="host" value="${shard1.host}" />  
				   <constructor-arg name="port" value="${shard1.port}" />  
				   <constructor-arg name="timeout" value="${shard1.timeout}" />  
				   <constructor-arg name="weight" value="${shard1.weight}" />  
			   </bean>
		   </list>  
	   </constructor-arg>
	</bean>
     -->
</beans>